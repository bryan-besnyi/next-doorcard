name: E2E Tests & ADA Compliance

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run daily at 2 AM to catch any regressions
    - cron: "0 2 * * *"

jobs:
  accessibility-audit:
    name: ADA Compliance Audit
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chrome, firefox, edge]
        viewport:
          - { width: 1920, height: 1080, name: "desktop" }
          - { width: 768, height: 1024, name: "tablet" }
          - { width: 375, height: 667, name: "mobile" }

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm run start &
        env:
          PORT: 3000

      - name: Wait for server
        run: npx wait-on http://localhost:3000

      - name: Run Cypress E2E tests - ${{ matrix.browser }} - ${{ matrix.viewport.name }}
        uses: cypress-io/github-action@v6
        with:
          browser: ${{ matrix.browser }}
          config: viewportWidth=${{ matrix.viewport.width }},viewportHeight=${{ matrix.viewport.height }}
          spec: |
            cypress/e2e/accessibility.cy.ts
            cypress/e2e/basic-functionality.cy.ts
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: Upload accessibility reports
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: accessibility-violations-${{ matrix.browser }}-${{ matrix.viewport.name }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports

  performance-audit:
    name: Performance & Core Web Vitals
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm run start &
        env:
          PORT: 3000

      - name: Wait for server
        run: npx wait-on http://localhost:3000

      - name: Run Performance Tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          spec: cypress/e2e/performance.cy.ts
          config: video=true,screenshotOnRunFailure=true

      - name: Upload performance reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: performance-reports
          path: |
            cypress/screenshots
            cypress/videos

  security-audit:
    name: Security & Authentication Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        run: |
          npm run db:generate
          npm run db:push

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm run start &
        env:
          PORT: 3000
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}

      - name: Wait for server
        run: npx wait-on http://localhost:3000

      - name: Run Security & Auth Tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          spec: cypress/e2e/auth.cy.ts

  lighthouse-audit:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Lighthouse CLI
        run: npm install -g @lhci/cli

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm run start &
        env:
          PORT: 3000

      - name: Wait for server
        run: npx wait-on http://localhost:3000

      - name: Run Lighthouse CI
        run: |
          lhci autorun --config=.lighthouserc.json
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: lighthouse-reports
          path: .lighthouseci

  deployment-ready:
    name: Deployment Readiness Check
    runs-on: ubuntu-latest
    needs:
      [accessibility-audit, performance-audit, security-audit, lighthouse-audit]

    steps:
      - name: All tests passed
        run: |
          echo "ðŸŽ‰ All accessibility, performance, and security tests passed!"
          echo "âœ… ADA Compliance verified across all browsers and viewports"
          echo "âœ… Performance benchmarks met"
          echo "âœ… Security tests passed"
          echo "âœ… Application is ready for deployment"

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸš€ Deployment Readiness Report

              âœ… **ADA Compliance**: All accessibility tests passed across Chrome, Firefox, and Edge
              âœ… **Performance**: Core Web Vitals within target thresholds
              âœ… **Security**: Authentication and authorization tests passed
              âœ… **Cross-Browser**: Verified compatibility across all major browsers
              âœ… **Responsive**: Tested on desktop, tablet, and mobile viewports

              **This pull request is ready for deployment!** ðŸŽ‰`
            })
